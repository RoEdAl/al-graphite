From 058a5d7112e49e96445ed89256bc9737f2652ae4 Mon Sep 17 00:00:00 2001
From: Edmunt Pienkowsky <roed@onet.eu>
Date: Fri, 10 Jan 2020 13:14:39 +0100
Subject: [PATCH 5/6] use render instead of deprecated render_to_response

The render_to_response shortcut was deprecated in Django 2.0.

diff --git a/webapp/graphite/account/views.py b/webapp/graphite/account/views.py
index 015f2ee0..918fa316 100644
--- a/webapp/graphite/account/views.py
+++ b/webapp/graphite/account/views.py
@@ -18,7 +18,7 @@ try:
 except ImportError:  # Django < 1.10
     from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
-from django.shortcuts import render_to_response
+from django.shortcuts import render
 from graphite.user_util import getProfile, isAuthenticated
 
 
@@ -32,14 +32,14 @@ def loginView(request):
   if username and password:
     user = authenticate(username=username,password=password)
     if user is None:
-      return render_to_response("login.html",{'authenticationFailed' : True, 'nextPage' : nextPage})
+      return render(request, "login.html",{'authenticationFailed' : True, 'nextPage' : nextPage})
     elif not user.is_active:
-      return render_to_response("login.html",{'accountDisabled' : True, 'nextPage' : nextPage})
+      return render(request, "login.html",{'accountDisabled' : True, 'nextPage' : nextPage})
     else:
       login(request,user)
       return HttpResponseRedirect(nextPage)
   else:
-    return render_to_response("login.html",{'nextPage' : nextPage})
+    return render(request, "login.html",{'nextPage' : nextPage})
 
 
 def logoutView(request):
@@ -52,7 +52,7 @@ def editProfile(request):
   if not isAuthenticated(request.user):
     return HttpResponseRedirect(reverse('browser'))
   context = { 'profile' : getProfile(request) }
-  return render_to_response("editProfile.html",context)
+  return render(request, "editProfile.html",context)
 
 
 def updateProfile(request):
diff --git a/webapp/graphite/browser/views.py b/webapp/graphite/browser/views.py
index 14e7b176..3bc9dc9c 100644
--- a/webapp/graphite/browser/views.py
+++ b/webapp/graphite/browser/views.py
@@ -15,7 +15,7 @@ limitations under the License."""
 import re
 
 from django.conf import settings
-from django.shortcuts import render_to_response
+from django.shortcuts import render
 from django.utils.safestring import mark_safe
 from django.utils.html import escape
 from graphite.account.models import Profile
@@ -34,7 +34,7 @@ def header(request):
   context['profile'] = getProfile(request)
   context['documentation_url'] = settings.DOCUMENTATION_URL
   context['login_url'] = settings.LOGIN_URL
-  return render_to_response("browserHeader.html", context)
+  return render(request, "browserHeader.html", context)
 
 
 def browser(request):
@@ -47,7 +47,7 @@ def browser(request):
     context['queryString'] = context['queryString'].replace('#','%23')
   if context['target']:
     context['target'] = context['target'].replace('#','%23') #js libs terminate a querystring on #
-  return render_to_response("browser.html", context)
+  return render(request, "browser.html", context)
 
 
 def search(request):
diff --git a/webapp/graphite/composer/views.py b/webapp/graphite/composer/views.py
index 4f61931b..5de75870 100644
--- a/webapp/graphite/composer/views.py
+++ b/webapp/graphite/composer/views.py
@@ -17,7 +17,7 @@ from graphite.user_util import getProfile
 from graphite.logger import log
 from graphite.account.models import MyGraph
 
-from django.shortcuts import render_to_response
+from django.shortcuts import render
 from django.http import HttpResponse
 from django.conf import settings
 from django.core.exceptions import ObjectDoesNotExist
@@ -36,7 +36,7 @@ def composer(request):
     'debug' : settings.DEBUG,
     'jsdebug' : settings.DEBUG,
   }
-  return render_to_response("composer.html",context)
+  return render(request, "composer.html",context)
 
 
 def mygraph(request):
diff --git a/webapp/graphite/dashboard/views.py b/webapp/graphite/dashboard/views.py
index 3c651bd1..576c9a4c 100644
--- a/webapp/graphite/dashboard/views.py
+++ b/webapp/graphite/dashboard/views.py
@@ -4,7 +4,7 @@ import errno
 from os.path import getmtime
 from six.moves.urllib.parse import urlencode
 from six.moves.configparser import ConfigParser
-from django.shortcuts import render_to_response
+from django.shortcuts import render
 from django.http import QueryDict
 from django.conf import settings
 from django.contrib.auth import login, authenticate, logout
@@ -152,7 +152,7 @@ def dashboard(request, name=None):
     else:
       context['initialState'] = dashboard.state
 
-  return render_to_response("dashboard.html", context)
+  return render(request, "dashboard.html", context)
 
 
 def template(request, name, val):
@@ -200,7 +200,7 @@ def template(request, name, val):
     state = json.loads(template.loadState(val))
     state['name'] = '%s/%s' % (name, val)
     context['initialState'] = json.dumps(state)
-  return render_to_response("dashboard.html", context)
+  return render(request, "dashboard.html", context)
 
 
 def getPermissions(user):
@@ -360,7 +360,7 @@ def find_template(request):
 
 def help(request):
   context = {}
-  return render_to_response("dashboardHelp.html", context)
+  return render(request, "dashboardHelp.html", context)
 
 
 def email(request):
diff --git a/webapp/graphite/events/views.py b/webapp/graphite/events/views.py
index f1e5b017..47c0cade 100644
--- a/webapp/graphite/events/views.py
+++ b/webapp/graphite/events/views.py
@@ -9,7 +9,7 @@ except ImportError:  # Django < 1.9
 from django.core.exceptions import ObjectDoesNotExist
 from django.core.serializers.json import DjangoJSONEncoder
 from django.forms.models import model_to_dict
-from django.shortcuts import render_to_response, get_object_or_404
+from django.shortcuts import render, get_object_or_404
 from django.utils.timezone import now
 
 from graphite.util import json, epoch, epoch_to_dt, jsonResponse, HttpError, HttpResponse
@@ -29,7 +29,7 @@ def view_events(request):
         context = {'events': fetch(request),
                    'site': RequestSite(request),
                    'protocol': 'https' if request.is_secure() else 'http'}
-        return render_to_response('events.html', context)
+        return render(request, 'events.html', context)
     else:
         return post_event(request)
 
@@ -50,7 +50,7 @@ def detail(request, event_id):
 
     e = get_object_or_404(Event, pk=event_id)
     context = {'event': e}
-    return render_to_response('event.html', context)
+    return render(request, 'event.html', context)
 
 
 def post_event(request):
diff --git a/webapp/graphite/version/views.py b/webapp/graphite/version/views.py
index 560f0d6e..753959a7 100755
--- a/webapp/graphite/version/views.py
+++ b/webapp/graphite/version/views.py
@@ -1,4 +1,4 @@
-from django.shortcuts import render_to_response
+from django.shortcuts import render
 from graphite import settings
 
 
@@ -6,4 +6,4 @@ def index(request):
   context = {
     'version' : settings.WEBAPP_VERSION,
   }
-  return render_to_response('version.html', context)
+  return render(request, 'version.html', context)
-- 
2.24.1

